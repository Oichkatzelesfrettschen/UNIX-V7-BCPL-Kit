#!/bin/sh -e

# Make script for bcplkit

DIRS="src doc"
MAKE=make

# Initialize
if test $# -gt 1; then
    echo "usage: makeall [target]" 1>&2
    exit 2
fi
target=$1
if test -z "$1"; then
    target="all"
fi

# Configure

os=`uname`
arch=`uname -m`
case "${os}" in
FreeBSD)
    sys="sys_freebsd.s" ;;
Linux)
    if [ "${arch}" = "x86_64" ]; then
        sys="sys_linux64.s"
        bits=64
    else
        sys="sys_linux.s"
        bits=32
    fi
    ;;
*)
    echo "${os}: Not supported" 1>&2
    exit 2
esac
rm -f src/sys.s
ln -s ${sys} src/sys.s
echo "Configured for ${os}"

if [ -z "$bits" ]; then
    [ "${arch}" = "x86_64" ] && bits=64 || bits=32
# Replace an existing regular file with the correct symbolic link
if [ -e src/sys.s ] && [ ! -h src/sys.s ]; then
    echo "Replacing stale sys.s"
    rm -f src/sys.s
fi
if test -e src/sys.s; then
    :
else
    os=`uname`
    arch=`uname -m`
    case "${os}" in
    FreeBSD)
        sys="sys_freebsd.s" ;;
    Linux)
        if [ "${arch}" = "x86_64" ]; then
            sys="sys_linux64.s"
        else
            sys="sys_linux.s"
        fi
        ;;
    *)
        echo "${os}: Not supported" 1>&2
        exit 2
    esac
    ln -s ${sys} src/sys.s
    echo "Configured for ${os}"
fi
export BUILD_BITS=${bits}

# Make
for dir in ${DIRS}
do
    echo "===== ${dir} ====="
    (cd ${dir} && BUILD_BITS=${bits} ${MAKE} ${target})
done
