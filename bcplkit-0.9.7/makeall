#!/bin/sh -e

# Make script for bcplkit
cd "$(dirname "$0")"

DIRS="src doc"
MAKE=make

usage() {
    echo "usage: BITS=32|64 makeall [all|clean|install|test|bootstrap]" 1>&2
    exit 2
}

if [ $# -gt 1 ]; then
    usage
fi

target=${1:-all}
case "$target" in
    all|clean|install) maketarget="$target" ;;
    test|bootstrap) maketarget="all" ;;
    *) usage ;;
esac

os=`uname`
arch=`uname -m`

bits=${BITS}
if [ -z "$bits" ]; then
    [ "$arch" = "x86_64" ] && bits=64 || bits=32
fi
case "$bits" in
    32|64) ;;
    *)
        echo "BITS must be 32 or 64" 1>&2
        exit 2 ;;
esac

case "$os" in
    FreeBSD) sys="sys_freebsd.s" ;;
    Linux)
        if [ "$bits" = 64 ]; then
            sys="sys_linux64.s"
        else
            sys="sys_linux.s"
        fi ;;
    *)
        echo "$os: Not supported" 1>&2
        exit 2 ;;
esac

if [ -e src/sys.s ] && [ ! -h src/sys.s ]; then
    rm -f src/sys.s
fi
ln -sf ${sys} src/sys.s
echo "Configured for $os (${bits}-bit)"

export BITS=$bits

for dir in ${DIRS}; do
    (cd ${dir} && ${MAKE} ${maketarget} BITS=$bits)
done

if [ "$target" = "test" ]; then
    (cd util && ${MAKE} BCPL=../src/bcpl cmpltest)
    (cd util && ./cmpltest > cmpltest.out)
    grep -q '0 FAILURE(S)' util/cmpltest.out || {
        echo "cmpltest failed" 1>&2
        exit 1
    }
fi

if [ "$target" = "bootstrap" ]; then
    tmp=`mktemp -d`
    for f in st cg xg; do
        cp src/$f $tmp/$f
    done
    (cd src && ${MAKE} clean)
    (cd src && ${MAKE} BITS=$bits)
    for f in st cg xg; do
        cmp $tmp/$f src/$f >/dev/null || {
            echo "$f differs after rebuild" 1>&2
            exit 1
        }
    done
    rm -rf $tmp
fi

